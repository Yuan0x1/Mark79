
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg.stats
{
public sealed partial class Stats : Luban.BeanBase
{
    public Stats(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["name"].IsString) { throw new SerializationException(); }  Name = _buf["name"]; }
        { if(!_buf["cost"].IsNumber) { throw new SerializationException(); }  Cost = _buf["cost"]; }
        { if(!_buf["damage"].IsNumber) { throw new SerializationException(); }  Damage = _buf["damage"]; }
        { if(!_buf["shootInterval"].IsNumber) { throw new SerializationException(); }  ShootInterval = _buf["shootInterval"]; }
        { if(!_buf["fightRange"].IsNumber) { throw new SerializationException(); }  FightRange = _buf["fightRange"]; }
        { if(!_buf["damageRange"].IsNumber) { throw new SerializationException(); }  DamageRange = _buf["damageRange"]; }
        { if(!_buf["quality"].IsNumber) { throw new SerializationException(); }  Quality = _buf["quality"]; }
        { if(!_buf["GuardHP"].IsNumber) { throw new SerializationException(); }  GuardHP = _buf["GuardHP"]; }
        { if(!_buf["Front"].IsBoolean) { throw new SerializationException(); }  Front = _buf["Front"]; }
        { if(!_buf["StatsGrade"].IsNumber) { throw new SerializationException(); }  StatsGrade = _buf["StatsGrade"]; }
    }

    public static Stats DeserializeStats(JSONNode _buf)
    {
        return new stats.Stats(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 名字
    /// </summary>
    public readonly string Name;
    /// <summary>
    /// 消耗费用
    /// </summary>
    public readonly int Cost;
    /// <summary>
    /// 攻击伤害
    /// </summary>
    public readonly int Damage;
    /// <summary>
    /// 攻击间隔
    /// </summary>
    public readonly float ShootInterval;
    /// <summary>
    /// 攻击范围
    /// </summary>
    public readonly int FightRange;
    /// <summary>
    /// 伤害范围
    /// </summary>
    public readonly int DamageRange;
    /// <summary>
    /// 子弹数量
    /// </summary>
    public readonly int Quality;
    /// <summary>
    /// 角色生命
    /// </summary>
    public readonly int GuardHP;
    /// <summary>
    /// 前排
    /// </summary>
    public readonly bool Front;
    /// <summary>
    /// 综合属性点数
    /// </summary>
    public readonly float StatsGrade;
   
    public const int __ID__ = -357739920;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "name:" + Name + ","
        + "cost:" + Cost + ","
        + "damage:" + Damage + ","
        + "shootInterval:" + ShootInterval + ","
        + "fightRange:" + FightRange + ","
        + "damageRange:" + DamageRange + ","
        + "quality:" + Quality + ","
        + "GuardHP:" + GuardHP + ","
        + "Front:" + Front + ","
        + "StatsGrade:" + StatsGrade + ","
        + "}";
    }
}

}

